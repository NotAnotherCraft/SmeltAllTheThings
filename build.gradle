buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'de.undercouch:gradle-download-task:1.2'
    }
}

apply plugin: 'forge'
apply plugin: 'de.undercouch.download'
import de.undercouch.gradle.tasks.download.Download

// Load configuration file
ext.configFile = file "build.properties"

configFile.withReader {
	def configProperties = new Properties()
	configProperties.load(it)
	project.ext.config = new ConfigSlurper().parse configProperties
}

ext.modid = "SATT"
version = "${config.minecraft_version}-${config.satt_version}"
group= "net.notanothercraft.satt" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "SmeltAllTheThings"

minecraft {
    version = "${config.minecraft_version}-${config.forge_version}"
    runDir = "minecraft"
    replaceIn "src/main/java/net/notanothercraft/satt/SATTConstants.java"
    replace '${version}', project.version
    replace '${mcversion}', project.minecraft.version
    replace '${modid}', project.modid
}


repositories {

    maven {
        name 'chickenbones'
        url 'http://chickenbones.net/maven'
    }
	maven { //Tcon+Mantle
		name 'DVS1'
		url 'http://dvs1.progwml6.com/files/maven'
	}
}

task(downloadDeps) //This empty task exists to contain all non-managed dependancies

task downloadBotania(type: Download){
    src "http://botaniamod.net/files/deobf/Botania%20r${config.botania_version}-deobf.jar"
    dest "deps/Botania r${config.botania_version}-deobf.jar"
    overwrite false
}

task downloadBaubles(type: Download){
    src "https://dl.dropboxusercontent.com/u/47135879/Baubles-deobf-${config.minecraft_version}-${config.baubles_version}.jar"
    dest "deps/Baubles-deobf-${config.minecraft_version}-${config.baubles_version}.jar"
    overwrite false
}

downloadBotania.dependsOn downloadBaubles

downloadDeps.dependsOn downloadBotania

compileJava.dependsOn downloadDeps



dependencies {
	compile "tconstruct:TConstruct:${config.minecraft_version}-${config.tconstruct_version}:deobf"
    compile files("deps/Botania r${config.botania_version}-deobf.jar")
    compile files("deps/Baubles-deobf-${config.minecraft_version}-${config.baubles_version}.jar")
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "modid", project.modid
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'modid':project.modid
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
